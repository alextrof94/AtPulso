//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AtPulso.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AtPulso.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;video id=&quot;video&quot; width=&quot;150&quot; height=&quot;150&quot; style=&quot;position:absolute; left:{video_left}px; {animation_filter}&quot; loop autoplay muted&gt;
        /// &lt;source src=&quot;http://localhost:{port}/video&quot; type=&apos;video/webm&apos;&gt;
        ///&lt;/video&gt;.
        /// </summary>
        internal static string Animation {
            get {
                return ResourceManager.GetString("Animation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на !function(t,e){&quot;object&quot;==typeof exports&amp;&amp;&quot;undefined&quot;!=typeof module?module.exports=e():&quot;function&quot;==typeof define&amp;&amp;define.amd?define(e):(t=&quot;undefined&quot;!=typeof globalThis?globalThis:t||self).Chart=e()}(this,(function(){&quot;use strict&quot;;var t=Object.freeze({__proto__:null,get Colors(){return Ho},get Decimation(){return Yo},get Filler(){return la},get Legend(){return ua},get SubTitle(){return ma},get Title(){return ga},get Tooltip(){return Ta}});function e(){}const i=(()=&gt;{let t=0;return()=&gt;t++})();function s(t){re [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string Chartjs {
            get {
                return ResourceManager.GetString("Chartjs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;span class=&quot;chart-container&quot; style=&quot;position:absolute; left:{container_left}px; height:150px; width:{chart_width}px; display: inline-block;&quot;&gt;
        ///	&lt;canvas id=&quot;myChart&quot; style=&quot;display:inline-block; height:150px; width:{chart_width}px;&quot;&gt;&lt;/canvas&gt;
        ///&lt;/span&gt;.
        /// </summary>
        internal static string ChartJsContainer {
            get {
                return ResourceManager.GetString("ChartJsContainer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;script src=&quot;http://localhost:{port}/chartjs&quot;&gt;&lt;/script&gt;.
        /// </summary>
        internal static string ChartJsHeader {
            get {
                return ResourceManager.GetString("ChartJsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Byte[].
        /// </summary>
        internal static byte[] Disconnected {
            get {
                object obj = ResourceManager.GetObject("Disconnected", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;script&gt;
        ///	const ctx = document.getElementById(&apos;myChart&apos;);
        ///	const vid = document.getElementById(&apos;video&apos;);
        ///	const hr = document.getElementById(&apos;nowPulse&apos;);
        ///
        ///	let chart = new Chart(ctx, {
        ///		type: &apos;line&apos;,
        ///		data: {
        ///		  datasets: [{
        ///			data: [],
        ///			borderWidth: {line_thickness},
        ///			borderColor: &apos;{color_line}&apos;,
        ///			tension: {line_smooth},
        ///		  }]
        ///		},
        ///		options: {
        ///			animations: false,
        ///			responsive: false,
        ///			//aspectRatio: {aspect_ratio},
        ///			elements: {
        ///				point: {
        ///					radius: 0
        ///				}
        ///			 [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string Footer_All {
            get {
                return ResourceManager.GetString("Footer_All", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;script&gt;
        ///	const ctx = document.getElementById(&apos;myChart&apos;);
        ///	const hr = document.getElementById(&apos;nowPulse&apos;);
        ///
        ///	let chart = new Chart(ctx, {
        ///		type: &apos;line&apos;,
        ///		data: {
        ///		  datasets: [{
        ///			data: [],
        ///			borderWidth: {line_thickness},
        ///			borderColor: &apos;{color_line}&apos;,
        ///			tension: {line_smooth},
        ///		  }]
        ///		},
        ///		options: {
        ///			animations: false,
        ///			responsive: false,
        ///			//aspectRatio: {aspect_ratio},
        ///			elements: {
        ///				point: {
        ///					radius: 0
        ///				}
        ///			},
        ///			scales: {
        ///				x: {
        ///					border: {
        ///				 [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string Footer_Chart_HR {
            get {
                return ResourceManager.GetString("Footer_Chart_HR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;script&gt;
        ///	const hr = document.getElementById(&apos;nowPulse&apos;);
        ///	
        ///	function httpGet(theUrl) {
        ///		var xmlHttp = new XMLHttpRequest();
        ///		xmlHttp.open(&quot;GET&quot;, theUrl, false ); // false for synchronous request
        ///		xmlHttp.send( null );
        ///		return xmlHttp.responseText;
        ///	}
        ///	function getNewValue() {
        ///		let res = JSON.parse(httpGet(&quot;http://localhost:{port}/getpulse/&quot;));
        ///		return res;
        ///	}
        ///	
        ///	function updateChart() {
        ///		let value = getNewValue();
        ///		
        ///		if (hr) {
        ///			hr.textContent = value;
        ///			if ({hr_threshold_chan [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string Footer_HR {
            get {
                return ResourceManager.GetString("Footer_HR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;script&gt;
        ///	const vid = document.getElementById(&apos;video&apos;);
        ///	const hr = document.getElementById(&apos;nowPulse&apos;);
        ///	
        ///	function httpGet(theUrl) {
        ///		var xmlHttp = new XMLHttpRequest();
        ///		xmlHttp.open(&quot;GET&quot;, theUrl, false ); // false for synchronous request
        ///		xmlHttp.send( null );
        ///		return xmlHttp.responseText;
        ///	}
        ///	function getNewValue() {
        ///		let res = JSON.parse(httpGet(&quot;http://localhost:{port}/getpulse/&quot;));
        ///		return res;
        ///	}
        ///	
        ///	function updateChart() {
        ///		let value = getNewValue();
        ///		if (vid)
        ///			vid.pla [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string Footer_HR_Anim {
            get {
                return ResourceManager.GetString("Footer_HR_Anim", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;span id=&quot;nowPulse&quot; style=&quot;
        ///	left: {left_big_number}px;
        ///    line-height: 150px;
        ///    vertical-align: middle;
        ///    font-size: 50px;
        ///	color: {color_big_number};
        ///    display: inline-block;
        ///    top: 0;
        ///    position: absolute;
        ///	text-align: center;
        ///	width: 100px;
        ///	text-shadow:
        ///		0 0 7px {color_big_number},
        ///		0 0 10px {color_big_number},
        ///		0 0 21px {color_big_number};
        ///&quot;&gt;&lt;/span&gt;.
        /// </summary>
        internal static string HR {
            get {
                return ResourceManager.GetString("HR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;html&gt;
        ///&lt;head&gt;
        ///{chart_header}
        ///&lt;style&gt;
        ///.hr_high {
        ///	color: {hr_threshold_color} !important;
        ///	text-shadow:
        ///		0 0 7px {hr_threshold_color},
        ///		0 0 10px {hr_threshold_color},
        ///		0 0 21px {hr_threshold_color} !important;
        ///}
        ///&lt;/style&gt;
        ///&lt;/head&gt;
        ///&lt;body style=&quot;background-color: rgba(0, 0, 0, 0); margin: 0px auto; overflow: hidden; font-family: {font_family}&quot;&gt;
        ///{main_container}
        ///{script_footer}
        ///&lt;/body&gt;
        ///&lt;/html&gt;.
        /// </summary>
        internal static string MainPage {
            get {
                return ResourceManager.GetString("MainPage", resourceCulture);
            }
        }
    }
}
